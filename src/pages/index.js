import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useState,useEffect } from 'react';

const inter = Inter({ subsets: ['latin'] })


export default function Home() {
  const [ color, setColor ] = useState("colorGreen");
  const possibleColors = ['colorBlue','colorGreen','colorRed','colorChocolate','colorSalmon','colorWhite','colorViolet','colorSlateBlue','colorGold'];

  const red = 'colorRed';
  const blue = 'colorBlue';
  const green = 'colorGreen';
  const chocolate = 'colorChocolate';
  const salmon = 'colorSalmon';
  const white = 'colorWhite';
  const violet = 'colorViolet';
  const slateBlue = 'colorSlateBlue';
  const gold = 'colorGold';
  
  const randomColorIndex = () => {
    return Math.floor(Math.random()*possibleColors.length);
  }
  
  const pickColors = ()=>{
    const array = [];
    for (let i = 0; i<4;i++){
      array.push(possibleColors[randomColorIndex()]);
    }
    return array;
  };

  const [pickedColors,setPickedColors] = useState(pickColors());

  useEffect(()=>{
    document.getElementById('modalButton').onclick = () =>{
      setPickedColors(pickColors());
    };
  })

  const clickedColors = [];

  useEffect( ()=> {
    document.getElementById('squareRed').onclick = () =>{
      clickedColors.push('colorRed');
    };
    document.getElementById('squareBlue').onclick = () =>{
      clickedColors.push('colorBlue');
    };
    document.getElementById('squareGreen').onclick = () =>{
      clickedColors.push('colorGreen');
    };
    document.getElementById('squareSalmon').onclick = () =>{
      clickedColors.push('colorSalmon');
    };
    document.getElementById('squareWhite').onclick = () =>{
      clickedColors.push('colorWhite');
    };
    document.getElementById('squareViolet').onclick = () =>{
      clickedColors.push('colorViolet');
    };
    document.getElementById('squareSlateBlue').onclick = () =>{
      clickedColors.push('colorSlateBlue');
    };
    document.getElementById('squareGold').onclick = () =>{
      clickedColors.push('colorGold');
    };
    document.getElementById('squareChocolate').onclick = () =>{
      clickedColors.push('colorChocolate');
    };
  })

  const compareArrays = (pickedColors, clickedColors) => {
    if (pickedColors.length !== clickedColors.length) 
      return false;
    else {
      // Comparing each element of your array
      for (var i = 0; i < pickedColors.length; i++) {
        if (pickedColors[i] !== clickedColors[i]) {
          return false;
        }
      }
      return true;
    }
  };

  useEffect(()=>{
    document.getElementById('verifyResult').onclick = () =>{
      if(compareArrays(pickedColors,clickedColors) == true){
        document.getElementById('textResult').innerHTML = "CORRETO!";
      }
      else{
        document.getElementById('textResult').innerHTML = "ERRADO!";
      }

    };
  })

  return (
    <>
      <Head>
        <title>Jogo da memória</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"></link>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
      </Head>
      <main className={styles.main}>

        <div className={styles.grid}>
          <div className={styles.colorSquare + ' ' + red} id="squareRed" ></div>
          <div className={styles.colorSquare + ' ' + blue} id="squareBlue"></div>
          <div className={styles.colorSquare + ' ' + green} id="squareGreen"></div>
          <div className={styles.colorSquare + ' ' + salmon} id="squareSalmon"></div>
        </div>

        <div className={styles.grid}>
          <div className={styles.colorSquare + ' ' + white} id="squareWhite"></div>
          <div className={styles.colorSquare + ' ' + violet} id="squareViolet"></div>
          <div className={styles.colorSquare + ' ' + slateBlue} id="squareSlateBlue"></div>
          <div className={styles.colorSquare + ' ' + gold} id="squareGold"></div>
        </div>

        <div className={styles.grid}>
          <div className={styles.colorSquare + ' ' + chocolate} id="squareChocolate"></div>
        </div>

        <button class="btn btn-primary" id='sequenceButton'>
          Reproduzir sequência
        </button>

        <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalLongoExemplo" id='modalButton'>
          Sequência de Cores
        </button>

        <div class="modal fade" id="ModalLongoExemplo" tabIndex="-1" role="dialog" aria-labelledby="TituloModalLongoExemplo" aria-hidden="true">
          <div class="modal-dialog" role="document">
            <div class="modal-content">
              <div class="modal-header">
                <h5 class="modal-title" id="TituloModalLongoExemplo">Sequência de cores</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Fechar">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <div class="modal-body">
                <div className={styles.grid}>
                  <div className={styles.colorSquare + ' ' + pickedColors[0]}></div>
                  <div className={styles.colorSquare + ' ' + pickedColors[1] }></div>
                  <div className={styles.colorSquare + ' ' + pickedColors[2] }></div>
                  <div className={styles.colorSquare + ' ' + pickedColors[3] }></div>
                </div>
              </div>
              <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                <button type="button" class="btn btn-primary">Salvar mudanças</button>
              </div>
            </div>
          </div>
        </div>
        
        <div id='gameResult'>
          <button id='verifyResult'>
            Verificar
          </button>
          <p id = 'textResult'>
          </p>
        </div>

      </main>
    </>
  )
}
