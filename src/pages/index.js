import Head from 'next/head';
import Image from 'next/image';
import { Inter } from 'next/font/google';
import styles from '@/styles/Home.module.css';
import { useState, useEffect } from 'react';

const inter = Inter({ subsets: ['latin'] });

export default function Home() {
  const [color, setColor] = useState("colorGreen");
  const possibleColors = ['colorBlue', 'colorGreen', 'colorRed', 'colorGold'];
  const [amount, setAmount] = useState(0);

  const red = 'colorRed';
  const blue = 'colorBlue';
  const green = 'colorGreen';
  const gold = 'colorGold';

  const randomColorIndex = () => {
    return Math.floor(Math.random() * possibleColors.length);
  }

  let stageColors = [];

  const pickColors = () => {
    const array = [];
    for (let i = 0; i < 10; i++) {
      array.push(possibleColors[randomColorIndex()]);
    }
    return array;
  };

  const [pickedColors, setPickedColors] = useState(pickColors());


  useEffect(() => {
    document.getElementById('sequenceButton').onclick = () => {
      setPickedColors(pickColors());
      sequencePlay(amount);
    };
  })


  const clickedColors = [];

  const colorPush = (color) => {
    document.getElementById('square' + color).onclick = () => {
      clickedColors.push('color' + color);
    };
  }

  const compareArrays = (completeArray, partialArray) => {
    if (partialArray.toString() != completeArray.slice(0,(partialArray.length)).toString()) return false;
    else {
      if(partialArray.length == completeArray) return true;
    }
  };

  const delay = ms => new Promise(
    resolve => setTimeout(resolve, ms)
  );

  const blinkColor = async color => {
    const colorSquare = 'square' + color.slice(5);
    document.getElementById(colorSquare).classList.add('colorActive');
    await delay(500);

    document.getElementById(colorSquare).classList.remove('colorActive');
    await delay(500);
  };

  const sequencePlay = async amount => {
    for (let i = 0; i <= amount; i++) {
      await delay(500);
      blinkColor(pickedColors[i]);
      await delay(500);
    }
  };

  const addClickerCheck = (color) => {
    document.getElementById('square' + color).onclick = () => {
      clickedColors.push('color' + color);
      if (!compareArrays(pickedColors, clickedColors)) {
        document.getElementById('textResult').innerHTML = "ERRADO!";
        setAmount(0);
      } else {
        setAmount(amount+1);
        document.getElementById('textResult').innerHTML = amount;
      }
    }
  }

  useEffect(() => {
    addClickerCheck('Blue');
    addClickerCheck('Green');
    addClickerCheck('Red');
    addClickerCheck('Gold');
  })


  return (
    <>
      <Head>
        <title>Jogo da memória</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css"></link>
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
      </Head>
      <main className={styles.main}>

        <div id='divTeste' value = ""></div>

        <div className={styles.grid + styles.center}>
          <div className={styles.colorSquare + ' ' + red} id="squareRed" ></div>
        </div>

        <div className={styles.grid + styles.center}>
          <div className={styles.colorSquare + ' ' + blue} id="squareBlue"></div>
        </div>

        <div className={styles.grid + styles.center}>
          <div className={styles.colorSquare + ' ' + green} id="squareGreen"></div>
        </div>

        <div className={styles.grid + styles.center}>
          <div className={styles.colorSquare + ' ' + gold} id="squareGold"></div>
        </div>

        <button className="btn btn-primary" id='sequenceButton' onClick={sequencePlay}>
          Reproduzir sequência
        </button>

        <span class="badge badge-dark" id='textResult'>ACERTOS</span>

      </main>
    </>
  )
}
